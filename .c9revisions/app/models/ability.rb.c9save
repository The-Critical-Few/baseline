{"ts":1377015094230,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"class Ability\n  include CanCan::Ability\n\n  def initialize(user)\n    # Define abilities for the passed in user here. For example:\n    #\n    #   user ||= User.new # guest user (not logged in)\n    #   if user.admin?\n    #     can :manage, :all\n    #   else\n    #     can :read, :all\n    #   end\n    #\n    # The first argument to `can` is the action you are giving the user \n    # permission to do.\n    # If you pass :manage it will apply to every action. Other common actions\n    # here are :read, :create, :update and :destroy.\n    #\n    # The second argument is the resource the user can perform the action on. \n    # If you pass :all it will apply to every resource. Otherwise pass a Ruby\n    # class of the resource.\n    #\n    # The third argument is an optional hash of conditions to further filter the\n    # objects.\n    # For example, here the user can only update published articles.\n    #\n    #   can :update, Article, :published => true\n    #\n    # See the wiki for details:\n    # https://github.com/ryanb/cancan/wiki/Defining-Abilities\n  end\nend\n"]],"start1":0,"start2":0,"length1":0,"length2":1054}]],"length":1054}
{"contributors":[],"silentsave":false,"ts":1377017574120,"patch":[[{"diffs":[[0,"e(user)\n"],[1,"      \n      \n    user ||= User.new # guest user (not logged in)\n       if user.role? :superadmin\n         can :manage, :all\n       end\n       if user.role? :admin\n         can :manage, :all \n         #cannot [:destroy, :edit, :update], User #do everything except delete users or change their permissions if you are using superadmin or tiered admins.\n       end\n       #if user.role? :creator\n         #can [:create, :destroy, :show], :all\n         #cannot [:index, :destroy, :show, :edit, :update], User\n         #can [:show, :edit, :update], User do |current_user|\n           #user.id == current_user.id #User can only edit the current user.\n         #end\n        #end\n       if user.role? :user\n         can :read, :all\n         cannot :index, User\n         can [:show, :edit, :update], User do |current_user|\n           user.id == current_user.id #User can only edit the current user.\n         end\n       else \n         can :read, :all\n       end\n"],[0,"    # De"]],"start1":56,"start2":56,"length1":16,"length2":967}]],"length":2005,"saved":false}
{"contributors":[],"silentsave":false,"ts":1377028833372,"patch":[[{"diffs":[[0,"   \n"],[-1,"    user ||= User.new # guest user (not logged in)\n    "],[0,"   i"]],"start1":74,"start2":74,"length1":63,"length2":8},{"diffs":[[0,"superadmin\n     "],[-1,"    "],[0,"can :manage, :al"]],"start1":96,"start2":96,"length1":36,"length2":32},{"diffs":[[0,"ll\n     "],[1,"can :index, User\n "],[0,"  end\n"],[-1,"    "],[0,"   if us"]],"start1":127,"start2":127,"length1":26,"length2":40},{"diffs":[[0,":admin\n     "],[-1,"    "],[0,"can :manage,"]],"start1":176,"start2":176,"length1":28,"length2":24},{"diffs":[[0," :all \n     "],[-1,"   "],[-1," "],[0,"#cannot [:de"]],"start1":200,"start2":200,"length1":28,"length2":24},{"diffs":[[0," admins."],[-1,"\n     "],[0,"  end\n"],[-1,"  "],[0,"     #if"]],"start1":353,"start2":353,"length1":30,"length2":22},{"diffs":[[0,"eator\n      "],[-1,"  "],[-1," "],[0,"#can [:creat"]],"start1":390,"start2":390,"length1":27,"length2":24},{"diffs":[[0,"show], :all\n"],[-1,"    "],[0,"     #cannot"]],"start1":428,"start2":428,"length1":28,"length2":24},{"diffs":[[0,"er\n     "],[-1," "],[-1,"   "],[0,"#can [:s"]],"start1":498,"start2":498,"length1":20,"length2":16},{"diffs":[[0,"\n       "],[-1,"  "],[-1,"  "],[0,"#user.id"]],"start1":558,"start2":558,"length1":20,"length2":16},{"diffs":[[0," user.\n     "],[-1,"    "],[0,"#end\n       "]],"start1":625,"start2":625,"length1":28,"length2":24},{"diffs":[[0,"end\n    "],[-1," "],[-1,"   "],[0,"#end\n"],[-1,"    "],[0,"   if us"]],"start1":638,"start2":638,"length1":29,"length2":21},{"diffs":[[0," :user\n     "],[-1,"  "],[-1,"  "],[0,"can :read, :"]],"start1":667,"start2":667,"length1":28,"length2":24},{"diffs":[[0,"ll\n     "],[-1,"   "],[-1," "],[0,"cannot :"]],"start1":692,"start2":692,"length1":20,"length2":16},{"diffs":[[0,"x, User\n"],[-1,"    "],[0,"     can"]],"start1":712,"start2":712,"length1":20,"length2":16},{"diffs":[[0,"\n       "],[-1," "],[-1,"   "],[0,"user.id "]],"start1":776,"start2":776,"length1":20,"length2":16},{"diffs":[[0,"r.\n     "],[-1,"  "],[-1,"  "],[0,"end\n"],[-1,"    "],[0,"   else "]],"start1":846,"start2":846,"length1":28,"length2":20},{"diffs":[[0,"  else \n"],[-1,"    "],[0,"     can"]],"start1":859,"start2":859,"length1":20,"length2":16},{"diffs":[[0,"all\n    "],[1," cannot :index, User\n"],[0,"   end\n "]],"start1":884,"start2":884,"length1":16,"length2":37}]],"length":1910,"saved":false}
{"contributors":[],"silentsave":false,"ts":1377800331211,"patch":[[{"diffs":[[0,"    #end\n   "],[1,"els"],[0,"if user.role"]],"start1":642,"start2":642,"length1":24,"length2":27}]],"length":1913,"saved":false}
{"ts":1377800412116,"patch":[[{"diffs":[[0,")\n      \n   "],[1,"user ||= User.new # guest user (not logged in)"],[0,"   \n   if us"]],"start1":62,"start2":62,"length1":24,"length2":70}]],"length":1959,"saved":false}
